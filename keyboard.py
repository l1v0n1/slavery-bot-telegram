from aiogram import types
from bot import admin


menu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
menu.add(
    types.KeyboardButton('üë§–ü—Ä–æ—Ñ–∏–ª—å'),
    types.KeyboardButton('üë•–ü—Ä–∏–≤–ª–µ—á—å —Ä–∞–±–æ–≤'),
    types.KeyboardButton('üîù–¢–æ–ø'),
    types.KeyboardButton('üí∞–ö—É–ø–∏—Ç—å —Ä–∞–±–æ–≤')
)


def ranout(cost, rab):
    redeem = types.InlineKeyboardMarkup()
    if rab == 1:
        redeem.add(
            types.InlineKeyboardButton(
                text='üôá–ú–æ–∏ —Ä–∞–±—ã',
                callback_data='slaves'),
            types.InlineKeyboardButton(
                text='üí∞–°–æ–±—Ä–∞—Ç—å –¥–æ—Ö–æ–¥',
                callback_data='claim'))
        redeem.add(
            types.InlineKeyboardButton(
                text=f'–í—ã–∫—É–ø–∏—Ç—å—Å—è –∑–∞ {cost}üí∞',
                callback_data=f'redeem_{cost}'))
    else:
        redeem.add(
            types.InlineKeyboardButton(
                text='üôá–ú–æ–∏ —Ä–∞–±—ã',
                callback_data='slaves'))
        redeem.add(
            types.InlineKeyboardButton(
                text='üí∞–°–æ–±—Ä–∞—Ç—å –¥–æ—Ö–æ–¥',
                callback_data='claim'))
    return redeem


def pagination(page, id, users, cost):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å –∑–∞ {}üí∞'.format(
        cost), callback_data='buy_{}-{}'.format(id, cost)))
    if len(users) != page + 1 and page != 0:
        kb.add(
            types.InlineKeyboardButton(
                '–ù–∞–∑–∞–¥',
                callback_data='back_{}'.format(
                    page - 1)),
            types.InlineKeyboardButton(
                '–î–∞–ª—å—à–µ',
                callback_data='next_{}'.format(
                    page + 1)))
    elif len(users) != page + 1 and page == 0:
        kb.add(
            types.InlineKeyboardButton(
                '–î–∞–ª—å—à–µ',
                callback_data='next_{}'.format(
                    page + 1)))
    elif len(users) == page + 1 and page != 0:
        kb.add(
            types.InlineKeyboardButton(
                '–ù–∞–∑–∞–¥',
                callback_data='back_{}'.format(
                    page - 1)))
    return kb


def slave_menu(page, users, id, cost):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton('–£–ª—É—á—à–∏—Ç—å –∑–∞ {}üí∞'.format(
        cost), callback_data='upgrade_{}-{}'.format(id, cost)))
    kb.add(
        types.InlineKeyboardButton(
            '–û—Ç–ø—É—Å—Ç–∏—Ç—å',
            callback_data='go_{}'.format(id)))
    if len(users) != page + 1 and page != 0:
        kb.add(
            types.InlineKeyboardButton(
                '–ù–∞–∑–∞–¥',
                callback_data='uback_{}'.format(
                    page - 1)),
            types.InlineKeyboardButton(
                '–î–∞–ª—å—à–µ',
                callback_data='unext_{}'.format(
                    page + 1)))
    elif len(users) != page + 1 and page == 0:
        kb.add(
            types.InlineKeyboardButton(
                '–î–∞–ª—å—à–µ',
                callback_data='unext_{}'.format(
                    page + 1)))
    elif len(users) == page + 1 and page != 0:
        kb.add(
            types.InlineKeyboardButton(
                '–ù–∞–∑–∞–¥',
                callback_data='uback_{}'.format(
                    page - 1)))
    return kb


apanel = types.InlineKeyboardMarkup(row_width=2)
apanel.add(
    types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞', callback_data='admin_rass'),
    types.InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='admin_stats'),
    types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='admin_bal')
)


cancel = types.ReplyKeyboardMarkup(resize_keyboard=True)
cancel.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∞'))


senderkb = types.InlineKeyboardMarkup(row_width=1)
senderkb.add(
    types.InlineKeyboardButton(
        text='üÜò–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º',
        url=f'tg://user?id={admin}'),
)


def send_link(link):
    url = 'https://t.me/share/url?url={}'.format(link)
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton('üîó–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π', url))
    return kb


topbuttons = types.InlineKeyboardMarkup()
topbuttons.add(
    types.InlineKeyboardButton('‚õì–ü–æ —Ä–∞–±–∞–º', callback_data='byslaves'),
    types.InlineKeyboardButton('ü§ë–ü–æ –±–∞–ª–∞–Ω—Å—É', callback_data='bybalance')
)
